// Set file variable
$filename: 'scss/blocks/_button-groups.scss';

// Dependencies
// @module Buttons Element - scss/elements/_buttons.scss

////////////////////////////////////////////////////////////////////////////////
// @Button Groups Map
////////////////////////////////////////////////////////////////////////////////

$button-groups: (
  'classes' : true,
  'classes-extend' : true,
  'classes-stack' : true,
  
  'class-group' : 'button-group',
  'class-wrapper' : 'button-group-wrapper',
  'class-has' : map-get($mini-grid, 'class-has'),
  'class-is' : map-get($mini-grid, 'class-is'),
  
  'fractions' : map-get($mini-grid, 'fractions'),
  'spacing' : 1em,
  
) !default;

////////////////////////////////////////////////////////////////////////////////
// @Button Groups Mixins
////////////////////////////////////////////////////////////////////////////////

// Make Button Group
// Creates the base styles for button groups.
// @param $options
//   @type map
//   @default $button-groups map
@mixin make-button-group($options: ()) {
  $o: map-merge($button-groups, $options);
  
  vertical-align: middle;
  margin: 0;
  @include clearfix();
  
  > .button {
    position: relative;
    z-index: 1;
    margin: 0;
    
    &:hover {
      z-index: 2;
    }
    &:focus {
      z-index: 3;
    }
    &:active {
      z-index: 4;
    }
    &.active {
      z-index: 5;
    }
  }
}

// Add Button Group Styles
// Adds button styles based on orientation and display type provided.
// @param $orientation
//   @type horizontal | vertical
//   @default null
// @param $display
//   @type inline | block
//   @default null
// @param $has
//   @type number
//   @default null
// @param $options
//   @type map
//   @default $button-groups map
@mixin add-button-group-style($orientation: null, $display: null, $has: null, $options: ()) {
  $o: map-merge($button-groups, $options);
  
  // Inline or Block
  @if ($display == 'inline') {
    
    display: inline-block;
    float: none;
    
    + .#{map-get($o, 'class-group')} {
      margin-top: 0;
      margin-left: (map-get($o, 'spacing') * 0.75);
    }
    
  } @else if ($display == 'block') {
    
    display: block;
    float: none;
    
    + .#{map-get($o, 'class-group')} {
      margin-top: map-get($o, 'spacing');
      margin-left: 0;
    }
    
  }
  
  // Horizontal or Vertical
  @if ($orientation == 'horizontal') {
    
    @include add-button-group-has($has);
    
    > .button {
      display: inline-block;
      float: left;
      border-radius: 0;
      
      + .button {
        margin-top: 0;
        margin-left: -(map-get($buttons, 'border-width')); // Border width of buttons
      }
      
      &:first-child {
        @include border-radius-top(0);
        @include border-radius-left(map-get($buttons, 'border-radius'));
      }
      &:last-child {
        @include border-radius-bottom(0);
        @include border-radius-right(map-get($buttons, 'border-radius'));
      }
    }
    
  } @else if ($orientation == 'vertical' ) {
    
    margin-right: 0;
    
    > .button {
      display: block;
      width: 100%;
      float: none;
      border-radius: 0;
      
      + .button {
        margin-top: -(map-get($buttons, 'border-width')); // Border width of buttons
        margin-left: 0;
      }
      
      &:first-child {
        @include border-radius-left(0);
        @include border-radius-top(map-get($buttons, 'border-radius'));
      }
      &:last-child {
        @include border-radius-right(0);
        @include border-radius-bottom(map-get($buttons, 'border-radius'));
      }
    }
  }
}

// Add Button Group Has
// Adds the button width and right margin for a horizontal block button group.
// @param $has
//   @type number
//   @default null
@mixin add-button-group-has($has: null) {
  @if ($has) {
    margin-right: -(map-get($buttons, 'border-width') * ($has - 1));
    > .button {
      width: (100% / $has);
    }
  } @else {
    margin-right: 0;
    > .button {
      width: auto;
    }
  }
}

// Build Button Group Mini-Grid Modifiers
// Builds the modifier classes for button groups mini grid system.
// @param $options
//   @type map
//   @default $button-groups map
@mixin build-button-group-mini-grid-modifiers($options: ()) {
  $o: map-merge($button-groups, $options);
  
  .#{map-get($o, 'class-group')}.fluid {
    display: table;
    width: 100%;
    > * {
      display: table-cell;
    }
  }
  
  @for $i from 1 through map-get($o, 'fractions') {
    .#{map-get($o, 'class-group')} > .button.#{map-get($o, 'class-is')}-1-of-#{$i},
    .#{map-get($o, 'class-group')}.#{map-get($o, 'class-has')}-#{$i} > .button {
      width: (100% / $i);
    }
  }

  @for $i from 2 through map-get($o, 'fractions') {
    .#{map-get($o, 'class-group')}.#{map-get($o, 'class-has')}-#{$i},
    .#{map-get($o, 'class-group')}.#{map-get($o, 'class-has')}-margin-#{$i} {
      margin-right: -(map-get($buttons, 'border-width') * ($i - 1)); // Border width of button * the number of buttons minus one.
    }
  }
}

// Build Button Group Stack Modifiers
// Builds the modifier classes for applying vertical block styles to a button
// group based on screen size.
// @param $options
//   @type map
//   @default $button-groups map
@mixin build-button-group-stack-modifiers($options: ()) {
  $o: map-merge($button-groups, $options);

  @include media-max('small') {
    .#{map-get($o, 'class-group')}.stack-for-tiny {
      @include add-button-group-style(vertical, block);
    }
  }
  @include media-max('medium') {
    .#{map-get($o, 'class-group')}.stack-for-small {
      @include add-button-group-style(vertical, block);
    }
  }
  @include media-max('large') {
    .#{map-get($o, 'class-group')}.stack-for-medium {
      @include add-button-group-style(vertical, block);
    }
  }
}

// Make Button Group Wrapper
// Creates the styles for a button group wrapper.
// @param $options
//   @type map
//   @default $button-groups map
@mixin make-button-group-wrapper($options: ()) {
  $o: map-merge($button-groups, $options);

  margin: 0 0 (-(map-get($o, 'spacing'))) (-(map-get($o, 'spacing')));
  @include clearfix();
  
  > .button,
  .#{map-get($o, 'class-group')} {
    float: left;
    @include float-modifiers();
  }
  
  .#{map-get($o, 'class-group')}.block {
    float: none;
    clear: both;
  }
  
  %button-group-wrapper-margins {
    margin-top: 0;
    margin-left: map-get($o, 'spacing');
    margin-bottom: map-get($o, 'spacing');
  }
  
  > .button,
  .#{map-get($o, 'class-group')},
  .#{map-get($o, 'class-group')}.block,
  .#{map-get($o, 'class-group')} + .#{map-get($o, 'class-group')},
  .#{map-get($o, 'class-group')}.block + .#{map-get($o, 'class-group')} {
    @extend %button-group-wrapper-margins;
  }
  
  @if (map-get($button-groups, 'classes-stack') == true) {
    .#{map-get($o, 'class-group')}.stack-for-small,
    .#{map-get($o, 'class-group')}.stack-for-mobile,
    .#{map-get($o, 'class-group')}.stack-for-tablet,
    .#{map-get($o, 'class-group')}.stack-for-small + .#{map-get($o, 'class-group')},
    .#{map-get($o, 'class-group')}.stack-for-mobile + .#{map-get($o, 'class-group')},
    .#{map-get($o, 'class-group')}.stack-for-tablet + .#{map-get($o, 'class-group')} {
      @extend %button-group-wrapper-margins;
    }
  }
}

// Check if we should output modifier classes
@if (map-get($button-groups, 'classes') == true) {
  
/*==============================================================================
  @Button Groups - #{$filename}
==============================================================================*/

.#{map-get($button-groups, 'class-group')} {
  @include make-button-group();
  @include add-button-group-style(horizontal, inline);
}

/**
 * Button Group Modifiers
 */
.#{map-get($button-groups, 'class-group')}.block {
  @include add-button-group-style($display: block);
}
.#{map-get($button-groups, 'class-group')}.vertical {
  @include add-button-group-style($orientation: vertical);
}

/**
 * Mini-Grid Modifiers
 */
@include build-button-group-mini-grid-modifiers();

@if (map-get($button-groups, 'classes-stack') == true) {
/**
 * Stack Modifiers
 */
@include build-button-group-stack-modifiers();

} // endif classes-stack

/**
 * Button Group Wrapper
 */
.#{map-get($button-groups, 'class-wrapper')} {
  @include make-button-group-wrapper();
}

@if (map-get($button-groups, 'classes-extend') == true) {
// Button Group Extends
// Adding these button modifier classes to a button group will apply them to
// children buttons

// Color
.#{map-get($button-groups, 'class-group')}.default,
.#{map-get($button-groups, 'class-wrapper')}.default {
  .button {
    @extend .button.default;
  }
}
.#{map-get($button-groups, 'class-group')}.blue,
.#{map-get($button-groups, 'class-group')}.primary,
.#{map-get($button-groups, 'class-group')}.active,
.#{map-get($button-groups, 'class-wrapper')}.blue,
.#{map-get($button-groups, 'class-wrapper')}.primary,
.#{map-get($button-groups, 'class-wrapper')}.active {
  .button {
    @extend .button.blue;
  }
}
.#{map-get($button-groups, 'class-group')}.black,
.#{map-get($button-groups, 'class-group')}.secondary,
.#{map-get($button-groups, 'class-wrapper')}.black,
.#{map-get($button-groups, 'class-wrapper')}.secondary {
  .button {
    @extend .button.black;
  }
}
.#{map-get($button-groups, 'class-group')}.green,
.#{map-get($button-groups, 'class-group')}.success,
.#{map-get($button-groups, 'class-wrapper')}.green,
.#{map-get($button-groups, 'class-wrapper')}.success {
  .button {
    @extend .button.green;
  }
}
.#{map-get($button-groups, 'class-group')}.orange,
.#{map-get($button-groups, 'class-group')}.warning,
.#{map-get($button-groups, 'class-wrapper')}.orange,
.#{map-get($button-groups, 'class-wrapper')}.warning {
  .button {
    @extend .button.orange;
  }
}
.#{map-get($button-groups, 'class-group')}.red,
.#{map-get($button-groups, 'class-group')}.danger,
.#{map-get($button-groups, 'class-wrapper')}.red,
.#{map-get($button-groups, 'class-wrapper')}.danger {
  .button {
    @extend .button.red;
  }
}

// Size
.#{map-get($button-groups, 'class-group')}.small,
.#{map-get($button-groups, 'class-wrapper')}.small {
  .button {
    @extend .button.small;
  }
}
.#{map-get($button-groups, 'class-group')}.large,
.#{map-get($button-groups, 'class-wrapper')}.large {
  .button {
    @extend .button.large;
  }
}

} // endif classes-extend

} // endif classes
