<h1>Button Groups</h1>

<p>Button groups are a way to create a set of buttons and make them visually grouped together. Button groups can either be lined up horizontally, or stacked vertically. They can also either be presented inline, or block (meaning they span the full width of their container).</p>

<pre class="language-markup"><code>
&lt;div class=&quot;button-group&quot;&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  ...
&lt;/div&gt;
&lt;div class=&quot;button-group&quot;&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  ...
&lt;/div&gt;
</code></pre>

<div class="demo demo-pad">
  <div class="button-group">
    <button class="button">Button</button>
    <button class="button">Button</button>
    <button class="button">Button</button>
  </div>
  <div class="button-group">
    <button class="button">Button</button>
    <button class="button">Button</button>
  </div>
</div>

<p>By default, button groups are displayed horizontal and inline. To toggle between the vertical display button styles, you can use the <code>.vertical</code> class on the button group element.</p>

<pre class="language-markup"><code>
&lt;div class=&quot;demo demo-pad&quot;&gt;
  &lt;div class=&quot;button-group vertical&quot;&gt;
    &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
    ...
  &lt;/div&gt;
  &lt;div class=&quot;button-group vertical&quot;&gt;
    &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
    ...
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<div class="demo demo-pad">
  <div class="button-group vertical">
    <button class="button">Button</button>
    <button class="button">Button</button>
    <button class="button">Button</button>
  </div>
  <div class="button-group vertical">
    <button class="button">Button</button>
    <button class="button">Button</button>
  </div>
</div>

<h2>Block Button Groups</h2>

<p>To create a button group that expands the full width of its container, There's the <code>.block</code> class.</p>

<pre class="language-markup"><code>
&lt;div class=&quot;button-group block vertical&quot;&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
&lt;/div&gt;
</code></pre>

<div class="demo demo-pad">
  <div class="button-group block vertical">
    <button class="button">Button</button>
    <button class="button">Button</button>
    <button class="button">Button</button>
  </div>
</div>

<p>If a button group is both horizontal and block, you'll need to define the number of children the button group has. For this, we use the mini grid system syntax of <code>.has-X</code> where <code>X</code> represents the number of children.</p> 

<pre class="language-markup"><code>
&lt;!-- Horizontal Block Button Group with 3 Chilren --&gt;
&lt;div class=&quot;button-group block has-3&quot;&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
&lt;/div&gt;
</code></pre>

<div class="demo demo-pad">
  <div class="button-group block has-3">
    <button class="button">Button</button>
    <button class="button">Button</button>
    <button class="button">Button</button>
  </div>
</div>

<p>Using the <code>.has-X</code> modifier will give each button element equal widths to a total of 100%. But if you need to give each button element unique widths, you can use the <code>.is-1-of-X</code> classes where <code>1-of-X</code> represents the fraction you want the button to take.</p>

<pre class="language-markup"><code>
&lt;div class=&quot;button-group block has-margin-3&quot;&gt;
  &lt;button class=&quot;button is-1-of-4&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button is-1-of-4&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button is-1-of-2&quot;&gt;Button&lt;/button&gt;
&lt;/div&gt;
</code></pre>

<div class="demo demo-pad">
  <div class="button-group block has-margin-3">
    <button class="button is-1-of-4">Button</button>
    <button class="button is-1-of-4">Button</button>
    <button class="button is-1-of-2">Button</button>
  </div>
</div>

<div class="notice warning">
  <p>If you use the <code>.is-1-of-X</code> modifier, remember that the parent button group element still needs a <code>has-margin-X</code> class to properly apply the negative right margins of the button group.</p>
</div>

<h2>Stack for Media Button Groups</h2>

<p>For cases where you want button groups to be vertical block for only specific media queries, there's the <code>stack-for-X</code> classes. These classes are built using the max-width media queries, so the styles are applied to a specified breakpoint and below.</p>

<pre class="language-markup"><code>
&lt;div class=&quot;button-group block has-5 stack-for-medium&quot;&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
&lt;/div&gt;
</code></pre>

<div class="demo demo-pad">
  <div class="button-group block has-5 stack-for-medium">
    <button class="button">Button</button>
    <button class="button">Button</button>
    <button class="button">Button</button>
    <button class="button">Button</button>
    <button class="button">Button</button>
  </div>
</div>

<ul class="docs-list-compact">
  <li class="title">Available Breakpoint Stack Classes</li>
  <li>
    <code>.stack-for-tiny</code>
    <code class="right value">media-max('small')</code>
  </li>
  <li>
    <code>.stack-for-small</code>
    <code class="right value">media-max('medium')</code>
  </li>
  <li>
    <code>.stack-for-medium</code>
    <code class="right value">media-max('large')</code>
  </li>
</ul>

<h2>Button Group Wrapper</h2>

<p>In the cases where you have multiple button groups, you have the <code>.button-group-wrapper</code> which applies comfortable spacing between button groups as well as individual buttons.</p>

<pre class="language-markup"><code>
&lt;div class=&quot;button-group-wrapper&quot;&gt;
  &lt;div class=&quot;button-group block has-3&quot;&gt;
    ...
  &lt;/div&gt;
  &lt;div class=&quot;button-group&quot;&gt;
    ...
  &lt;/div&gt;
  &lt;div class=&quot;button-group&quot;&gt;
    ...
  &lt;/div&gt;
  &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
&lt;/div&gt;
</code></pre>

<div class="demo demo-pad">
  <div class="button-group-wrapper">
    <div class="button-group block has-3">
      <button class="button">Button</button>
      <button class="button">Button</button>
      <button class="button">Button</button>
    </div>
    <div class="button-group">
      <button class="button">Button</button>
      <button class="button">Button</button>
    </div>
    <div class="button-group">
      <button class="button">Button</button>
      <button class="button">Button</button>
    </div>
    <button class="button">Button</button>
  </div>
</div>

<p>For more complex button layouts, you can use the mini grid system along with the button group wrapper to create a columned button layout. We also added a stack modifier for better usability on smaller devices.</p>

<pre class="language-markup"><code>
&lt;div class=&quot;button-group-wrapper has-2&quot;&gt;
  &lt;div&gt;
    &lt;div class=&quot;button-group block has-2 stack-for-medium&quot;&gt;
      &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
      &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div class=&quot;button-group block has-2 stack-for-medium&quot;&gt;
      &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
      &lt;button class=&quot;button&quot;&gt;Button&lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<div class="demo demo-pad">
  <div class="button-group-wrapper has-2">
    <div>
      <div class="button-group block has-2 stack-for-medium">
        <button class="button">Button</button>
        <button class="button">Button</button>
      </div>
    </div>
    <div>
      <div class="button-group block has-2 stack-for-medium">
        <button class="button">Button</button>
        <button class="button">Button</button>
      </div>
    </div>
  </div>
</div>

<h2>Button Modifier Classes</h2>

<p>As a method to easily style a group of buttons, all button color and size modifier classes are available for button groups and button group wrappers to apply for all children button elements.</p>

<pre class="language-markup"><code>
&lt;div class=&quot;button-group-wrapper primary&quot;&gt; ... &lt;/div&gt;
</code></pre>

<div class="demo demo-pad">
  <div class="button-group-wrapper primary">
    <div class="button-group block has-3">
      <button class="button">Button</button>
      <button class="button">Button</button>
      <button class="button">Button</button>
    </div>
    <div class="has-2">
      <div>
        <div class="button-group block has-2 stack-for-medium">
          <button class="button">Button</button>
          <button class="button">Button</button>
        </div>
      </div>
      <div>
        <div class="button-group block has-2 stack-for-medium">
          <button class="button">Button</button>
          <button class="button">Button</button>
        </div>
      </div>
    </div>
  </div>
</div>

<section class="subsection subsection-variables has-inner-subsection">
<div class="inner-subsection">
  <h1>Button Group Variables</h1>
  <p class="text-lead">Button Group variables are encompassed within the <code>$button-groups</code> map and are used throughout all button group mixins to set default values and toggle classes output.</p>
  <ul class="docs-list-compact">
    <li>
      <code>$button-groups('classes')</code>
      <code class="right value">true</code>
      <span class="block light">Whether or not we should output modifier classes. Set to <code>false</code> if you want to use the button group modifier mixins semantically and/or reduce CSS output.</span>
    </li>
    <li>
      <code>$button-groups('classes-stack')</code>
      <code class="right value">true</code>
      <span class="block light">Whether or not the stack modifier classes should be output.</span>
    </li>
    <li>
      <code>$button-groups('classes-extend')</code>
      <code class="right value">true</code>
      <span class="block light">Whether or not the button modifier classes should be extended onto button group and button group wrapper elements.</span>
    </li>
    
    <li>
      <code>$button-groups('class-group')</code>
      <code class="right value">'button-group'</code>
      <span class="block light">Class name for button group element.</span>
    </li>
    <li>
      <code>$button-groups('class-wrapper')</code>
      <code class="right value">'button-group-wrapper'</code>
      <span class="block light">Class name for button group wrapper element.</span>
    </li>
    <li>
      <code>$button-groups('class-has')</code>
      <code class="right value">map-get($mini-grid, 'class-has')</code>
      <span class="block light">Class name prefix for button-group mini-grid parent elements.</span>
    </li>
    <li>
      <code>$button-groups('class-is')</code>
      <code class="right value">map-get($mini-grid, 'class-is')</code>
      <span class="block light">Class name prefix for button-group mini-grid children elements.</span>
    </li>
    
    <li>
      <code>$button-groups('fractions')</code>
      <code class="right value">map-get($mini-grid, 'fractions')</code>
      <span class="block light">Used to define the number of fraction classes to output.</span>
    </li>
    <li>
      <code>$button-groups('spacing')</code>
      <code class="right value">1em</code>
      <span class="block light">The amount of space that's created between button groups.</span>
    </li>
  </ul>
</div>
</section>

<section class="subsection subsection-mixins has-inner-subsection">
<div class="inner-subsection">
  <h1>Button Group Mixins</h1>
  <p class="text-lead">Button group mixins are used to define and modify groups of buttons. They provide a way to toggle button groups being horizontal or vertical and inline or block along with other helpful modifiers and classes output.</p>
</div>
<ul class="docs-list">
  
  <li>
    <h2>make-button-group</h2>
    <p>Creates the base styles for button groups.</p>
    <pre class="language-scss"><code>@mixin make-button-group( $options: () )
// @param $options
//   @type map
//   @default $button-groups map</code></pre>
  </li>
  
  <li>
    <h2>add-button-group-style</h2>
    <p>Adds button styles based on orientation and display type provided.</p>
    <pre class="language-scss"><code>@mixin add-button-group-style( $orientation, $display, $has, $options: () )
// @param $orientation
//   @type horizontal | vertical
//   @default null
// @param $display
//   @type inline | block
//   @default null
// @param $has
//   @type number
//   @default null
// @param $options
//   @type map
//   @default $button-groups map</code></pre>
  </li>
  
  <li>
    <h2>add-button-group-has</h2>
    <p>Adds the button width and right margin for a horizontal block button group.</p>
    <pre class="language-scss"><code>@mixin add-button-group-has( $has )
// @param $has
//   @type number
//   @default null</code></pre>
  </li>
  
  <li>
    <h2>build-button-group-mini-grid-modifiers</h2>
    <p>Builds the modifier classes for button groups mini grid system.</p>
    <pre class="language-scss"><code>@mixin build-button-group-mini-grid-modifiers( $options: () )
// @param $options
//   @type map
//   @default $button-groups map</code></pre>
  </li>
  
  <li>
    <h2>build-button-group-stack-modifiers</h2>
    <p>Builds the modifier classes for applying vertical block styles to a button group based on screen size.</p>
    <pre class="language-scss"><code>@mixin build-button-group-stack-modifiers( $options: () )
// @param $options
//   @type map
//   @default $button-groups map</code></pre>
  </li>
  
  <li>
    <h2>make-button-group-wrapper</h2>
    <p>Creates the styles for a button group wrapper.</p>
    <pre class="language-scss"><code>@mixin make-button-group-wrapper( $options: () )
// @param $options
//   @type map
//   @default $button-groups map</code></pre>
  </li>
  
</ul>
</section>