<h1>Tables</h1>
<p>The HTML <code>&lt;table&gt;</code> element is used to display tabular data. Tables have rows, cells , header cells  and also can include <code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code> or <code>&lt;tfooter&gt;</code> which wrap their respective table data. Here's an example of a table markup and the default styles:</p>

<pre class="language-markup"><code>&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;...&lt;/th&gt;
    &lt;th&gt;...&lt;/th&gt;
    &lt;th&gt;...&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;...&lt;/td&gt;
    &lt;td&gt;...&lt;/td&gt;
    &lt;td&gt;...&lt;/td&gt;
  &lt;/tr&gt;
  ...
&lt;/table&gt;</code></pre>

<div class="demo">
  <table>
    <tr>
      <th>#</th>
      <th>Table Header</th>
      <th>Table Header</th>
      <th>Table Header</th>
    </tr>
    <tr>
      <td>1</td>
      <td>Table cell</td>
      <td>Table cell</td>
      <td>Table cell</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Table cell</td>
      <td>Table cell</td>
      <td>Table cell</td>
    </tr>
    <tr>
      <td>3</td>
      <td>Table cell</td>
      <td>Table cell</td>
      <td>Table cell</td>
    </tr>
  </table>
</div>

<p>You'll notice that the base styles for a table are almost untouched. That's because tables are used in a wide array of data on the web, so any sort of custom styles that BaseWeb has available are best applied using modifier classes and mixins for semantic applications.</p>

<section class="subsection subsection-variables has-inner-subsection">
<div class="inner-subsection">
  <h1>Table Variables</h1>
  <p class="text-lead">Table variables are encompassed within the <code>$tables</code> map and are used throughout all table mixins to set default values.</p>
<ul class="docs-list docs-list-compact">
  <li>
    <code>$tables('classes')</code>
    <code class="right value">true</code>
    <span class="block light">Whether or not we should output modifier classes. Set to <code>false</code> if you want to use the table modifier mixins semantically and/or reduce CSS output.</span>
  </li>
  <li><code>$tables('valign')</code> <code class="right value">top</code></li>
  <li><code>$tables('nth')</code> <code class="right value">odd</code></li>
  <li><code>$tables('stripe')</code> <code class="right value">horizontal</code></li>

  <li><code>$tables('margin')</code> <code class="right value">1rem 0</code></li>
  <li><code>$tables('padding-condensed')</code> <code class="right value">0.25rem</code></li>
  <li><code>$tables('padding')</code> <code class="right value">0.75rem</code></li>
  <li><code>$tables('padding-expanded')</code> <code class="right value">1.25rem</code></li>
  
  <li><code>$tables('background')</code> <code class="right value">none</code></li>
  <li><code>$tables('background-stripe')</code> <code class="right value">rgba($black, 0.05)</code></li>
  <li><code>$tables('background-hover')</code> <code class="right value">$yellow-pale</code></li>
  
  <li><code>$tables('border')</code> <code class="right value">1px solid rgba($black, 0.1)</code></li>
  <li><code>$tables('border-radius')</code> <code class="right value">$border-radius</code></li>
</ul>
</div>
</section>

<section class="subsection subsection-mixins has-inner-subsection">
<div class="inner-subsection">
  <h1>Table Mixins</h1>
  <p class="text-lead">Tabular data can be frustrating to parse if they are not styled properly. BaseWeb provides the mixins and classes you need to make tables and their content a breeze to analyze.</p>
</div>
<ul class="docs-list">
    
  <li>
    <h2>make-table</h2>
    <p>Creates the base styles for a table modifier mixin or class. Usually applied directly through a base table class, mixin or an extend placeholder. If table modifier classes are enabled, you are provided <code>.table</code> for your base table class.</p>
    <pre class="language-scss"><code>@mixin make-table( $options: () )
// @param $options
//   @type map
//   @default $tables map</code></pre>
    <h3>Example Usage</h3>
    <p>Using the base table mixin for custom tables. This example shows us using a <code>%base-table</code> placeholder for the extend method.</p>
    <pre class="language-scss"><code>%base-table {
  @include make-table();
}
.table-example-1 {
  @extend %base-table;
  ...
}
.table-example-2 {
  @extend %base-table;
  ...
}</code></pre>
  </li>
  
  <li>
    <h2>add-table-rowed</h2>
    <p>Adds borders to a table that divide table rows. Requires the use of base table styles through base table class, mixin or extend.</p>
    <pre class="language-scss"><code>@mixin add-table-rowed( $options: () )
// @param $options
//   @type map
//   @default $tables map</code></pre>
    <h3>Example Usage</h3>
    <pre class="language-scss"><code>.custom-table {
  @include make-table();
  @include add-table-rowed();
}
</code></pre>
    <pre class="language-markup"><code>&lt;table class=&quot;table rowed&quot;&gt;...&lt;/table&gt;</code></pre>
    <div class="demo">
      <table class="table rowed">
        <tr>
          <th>#</th>
          <th>Table Header</th>
          <th>Table Header</th>
          <th>Table Header</th>
        </tr>
        <tr>
          <td>1</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>2</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>3</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
      </table>
    </div>
  </li>
  
  <li>
    <h2>add-table-columned</h2>
    <p>Adds borders to a table that divide table columns. Requires the use of base table styles through base table class, mixin or extend.</p>
    <pre class="language-scss"><code>@mixin add-table-columned( $options: () )
// @param $options
//   @type map
//   @default $tables map</code></pre>
    <h3>Example Usage</h3>
    <pre class="language-scss"><code>.custom-table {
  @include make-table();
  @include add-table-columned();
}
</code></pre>
    <pre class="language-markup"><code>&lt;table class=&quot;table columned&quot;&gt;...&lt;/table&gt;</code></pre>
    <div class="demo">
      <table class="table columned">
        <tr>
          <th>#</th>
          <th>Table Header</th>
          <th>Table Header</th>
          <th>Table Header</th>
        </tr>
        <tr>
          <td>1</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>2</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>3</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
      </table>
    </div>
  </li>
  
  <li>
    <h2>add-table-bordered</h2>
    <p>Adds borders to a table that divide table cells. Requires the use of base table styles through base table class, mixin or extend.</p>
    <pre class="language-scss"><code>@mixin add-table-bordered( $options: () )
// @param $options
//   @type map
//   @default $tables map</code></pre>
    <h3>Example Usage</h3>
    <pre class="language-scss"><code>.custom-table {
  @include make-table();
  @include add-table-bordered();
}
</code></pre>
    <pre class="language-markup"><code>&lt;table class=&quot;table bordered&quot;&gt;...&lt;/table&gt;</code></pre>
    <div class="demo">
      <table class="table bordered">
        <tr>
          <th>#</th>
          <th>Table Header</th>
          <th>Table Header</th>
          <th>Table Header</th>
        </tr>
        <tr>
          <td>1</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>2</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>3</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
      </table>
    </div>
  </li>
  
  <li>
    <h2>add-table-size</h2>
    <p>Toggles a tables padding size between condensed, expanded or a custom padding value.</p>
    <pre class="language-scss"><code>@mixin add-table-size( $size, $options: () )
// @param $size
//   @type condensed | expanded | unit (pixel, em, percent)
// @param $options
//   @type map
//   @default $tables map</code></pre>
    <h3>Example Usage</h3>
    <p>As a mixin, this is used when overriding the inherited table size of more general table styles.</p>
    <pre class="language-scss"><code>
.all-tables {
  @include make-table();
  @include add-table-bordered();
}
.small-tables {
  @extend .all-tables;
  @include add-table-size(condensed);
}
.custom-tables {
  @extend .all-tables;
  @include add-table-size(8px 16px);
}</code></pre>
    <p>When class modifiers are enabled, you have the two sizing utility classes (<code>.condensed</code>, <code>.expanded</code>) available. This are primarily used along side the base and style modifier classes.</p>
    <pre class="language-markup"><code>&lt;table class=&quot;table bordered condensed&quot;&gt;...&lt;/table&gt;</code></pre>
    <div class="demo">
      <table class="table bordered condensed">
        <tr>
          <th>#</th>
          <th>Table Header</th>
          <th>Table Header</th>
          <th>Table Header</th>
        </tr>
        <tr>
          <td>1</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>2</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>3</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
      </table>
    </div>
    <pre class="language-markup"><code>&lt;table class=&quot;table bordered expanded&quot;&gt;...&lt;/table&gt;</code></pre>
    <div class="demo">
      <table class="table bordered expanded">
        <tr>
          <th>#</th>
          <th>Table Header</th>
          <th>Table Header</th>
          <th>Table Header</th>
        </tr>
        <tr>
          <td>1</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>2</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>3</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
      </table>
    </div>
  </li>
  
  <li>
    <h2>add-table-rounded</h2>
    <p>Gives a table rounded borders depending on parameters passed.</p>
    <pre class="language-scss"><code>@mixin add-table-rounded( $radius, $options: () )
// @param $radius
//   @type unit (pixel, percent)
//   @default default ($tables('border-radius'))
// @param $options
//   @type map
//   @default $tables map</code></pre>
    <h3>Example Usage</h3>
    <pre class="language-scss"><code>.custom-table {
  @include make-table();
  @include add-table-bordered();
  @include add-table-rounded();
}
</code></pre>
    <pre class="language-markup"><code>&lt;table class=&quot;table bordered rounded&quot;&gt;...&lt;/table&gt;</code></pre>
    <div class="demo">
      <table class="table bordered rounded">
        <tr>
          <th>#</th>
          <th>Table Header</th>
          <th>Table Header</th>
          <th>Table Header</th>
        </tr>
        <tr>
          <td>1</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>2</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>3</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
      </table>
    </div>
  </li>
  
  <li>
    <h2>add-table-stripes</h2>
    <p>Gives a table stripes either vertical or horizontal depending on parameters passed.</p>
    <pre class="language-scss"><code>@mixin add-table-stripes( $nth, $dir, $options: () )
// @param $nth
//   @type nth (odd, even)
//   @default default ($tables('nth'))
// @param $dir
//   @type orientation of stripes (vertical, horizontal)
//   @default default ($tables('stripe'))
// @param $options
//   @type map
//   @default $tables map</code></pre>
    <h3>Example Usage</h3>
    <pre class="language-scss"><code>.custom-table {
  @include make-table();
  @include add-table-bordered();
  @include add-table-stripes();
}
</code></pre>
    <pre class="language-markup"><code>&lt;table class=&quot;table bordered striped&quot;&gt;...&lt;/table&gt;
&lt;table class=&quot;table bordered striped-horizontal&quot;&gt;...&lt;/table&gt;</code></pre>
    <div class="demo">
      <table class="table bordered striped">
        <tr>
          <th>#</th>
          <th>Table Header</th>
          <th>Table Header</th>
          <th>Table Header</th>
        </tr>
        <tr>
          <td>1</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>2</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>3</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
      </table>
    </div>
    <pre class="language-markup"><code>&lt;table class=&quot;table bordered striped-vertical&quot;&gt;...&lt;/table&gt;</code></pre>
    <div class="demo">
      <table class="table bordered striped-vertical align-center">
        <tr>
          <th>#</th>
          <th>#</th>
          <th>#</th>
          <th>#</th>
          <th>#</th>
          <th>#</th>
          <th>#</th>
          <th>#</th>
        </tr>
        <tr>
          <td>1</td>
          <td>2</td>
          <td>3</td>
          <td>4</td>
          <td>5</td>
          <td>6</td>
          <td>7</td>
          <td>8</td>
        </tr>
        <tr>
          <td>I</td>
          <td>II</td>
          <td>III</td>
          <td>IV</td>
          <td>V</td>
          <td>VI</td>
          <td>VII</td>
          <td>VIII</td>
        </tr>
        <tr>
          <td>a</td>
          <td>b</td>
          <td>c</td>
          <td>d</td>
          <td>e</td>
          <td>f</td>
          <td>g</td>
          <td>h</td>
        </tr>
        <tr>
          <td>A</td>
          <td>B</td>
          <td>C</td>
          <td>D</td>
          <td>E</td>
          <td>F</td>
          <td>G</td>
          <td>H</td>
        </tr>
      </table>
    </div>
  </li>
  
  <li>
    <h2>add-table-hover</h2>
    <p>Gives table hover styles for rows.</p>
    <pre class="language-scss"><code>@mixin add-table-hover( $bg-hover, $options: () )
// @param $bg-hover
//   @type color
//   @default default ($tables('background-hover'))
// @param $options
//   @type map
//   @default $tables map</code></pre>
    <h3>Example Usage</h3>
    <pre class="language-scss"><code>.custom-table {
  @include make-table();
  @include add-table-bordered();
  @include add-table-hover();
}
</code></pre>
    <pre class="language-markup"><code>&lt;table class=&quot;table bordered hover&quot;&gt;...&lt;/table&gt;</code></pre>
    <div class="demo">
      <table class="table bordered hover">
        <tr>
          <th>#</th>
          <th>Table Header</th>
          <th>Table Header</th>
          <th>Table Header</th>
        </tr>
        <tr>
          <td>1</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>2</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
        <tr>
          <td>3</td>
          <td>Table cell</td>
          <td>Table cell</td>
          <td>Table cell</td>
        </tr>
      </table>
    </div>
  </li>
  
  <li>
    <h2>add-table-alignment</h2>
    <p>Sets the vertical and text alignment of a table if a parameter is passed.</p>
    <pre class="language-scss"><code>@mixin add-table-alignment( $options: () )
// @param $options
//   @type map ('vertical-align', 'text-align')
//   @default map (none, none)</code></pre>
    <h3>Example Usage</h3>
    <p>If you don't have class modifiers enabled, or just want to set table alignment in your SCSS, just pass in the alignment settings you'd like set.</p>
    <pre class="language-scss"><code>// SCSS
.table-custom-alignment {
  ...
  @include add-table-alignment((
    'vertical-align': middle,
    'text-align': center
  ));
}

// CSS Output
.table-custom-alignment tr {
  vertical-align: middle;
}
.table-custom-alignment tr td,
.table-custom-alignment tr th {
  text-align: center;
}
</code></pre>
    <h3>Available Classes</h3>
    <div class="docs-table-responsive">
      <table class="docs-table">
        <tr>
          <td><code>.valign-baseline</code></td>
          <td>Applies <code>vertical-align: baseline;</code> to table rows.</td>
        </tr>
         <tr>
          <td><code>.valign-top</code></td>
          <td>Applies <code>vertical-align: top;</code> to table rows.</td>
        </tr>
         <tr>
          <td><code>.valign-middle</code></td>
          <td>Applies <code>vertical-align: middle;</code> to table rows.</td>
        </tr>
         <tr>
          <td><code>.valign-bottom</code></td>
          <td>Applies <code>vertical-align: bottom;</code> to table rows.</td>
        </tr>
        <tr>
          <td><code>.align-left</code></td>
          <td>Aligns text to the left for all table cells.</td>
        </tr>
        <tr>
          <td><code>.align-center</code></td>
          <td>Aligns text to the center for all table cells.</td>
        </tr>
        <tr>
          <td><code>.align-right</code></td>
          <td>Aligns text to the right for all table cells.</td>
        </tr>
      </table>
    </div>
    <pre class="language-markup"><code>&lt;table class=&quot;table bordered table-align-center&quot;&gt;...&lt;/table&gt;</code></pre>
  </li>
  
  <li>
    <h2>make-table-responsive</h2>
    <p>When added to a wrapping element of a table, will make the table responsive for tablets and below.</p>
    <pre class="language-scss"><code>@mixin make-table-responsive( $options: () )
// @param $options
//   @type map
//   @default $tables map</code></pre>
    <h3>Example Usage</h3>
    <p>Simply wrap a div with the <code>.table-responsive</code> class or apply the <code>make-table-responsive()</code> mixin to a div wrapping a table to create this effect. Keep in mind that it's triggered using <code>media-max('tablet')</code>.</p>
    <pre class="language-markup"><code>&lt;div class=&quot;table-responsive&quot;&gt;
  &lt;table class=&quot;table bordered&quot;&gt;
    ...
  &lt;/table&gt;
&lt;/div&gt;</code></pre>
    <div class="demo">
      <div class="table-responsive">
        <table class="table bordered">
          <tr>
            <th>#</th>
            <th>Table Header</th>
            <th>Table Header</th>
            <th>Table Header</th>
          </tr>
          <tr>
            <td>1</td>
            <td>Table cell</td>
            <td>Table cell</td>
            <td>Table cell</td>
          </tr>
          <tr>
            <td>2</td>
            <td>Table cell</td>
            <td>Table cell</td>
            <td>Table cell</td>
          </tr>
          <tr>
            <td>3</td>
            <td>Table cell</td>
            <td>Table cell</td>
            <td>Table cell</td>
          </tr>
        </table>
      </div>
    </div>
  </li>
  
</ul>
</section>
